<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Custom</title>
    <link rel="stylesheet" type="text/css" href="/css/custom.css">
    <script src="https://kit.fontawesome.com/093b934dd0.js" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Aoboshi+One&family=Caveat:wght@700&family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
</head>
<body>

    <div class="main-header">
        <div class="container">
          <div class="text-content">
            <h1><i class="<%= sandwich.icon %>"></i> <%= sandwich.name %> </h1>
            <p><%= sandwich.description %></p>
          </div>
        </div>
      </div>
 
    
  <div class="container">
      <ul class="home_list">
        <li><i class="fa-solid fa-house fa-lg"></i></li>
        <li class="home_text">
          <i class="fa-solid fa-cart-shopping fa-lg widget"></i> Your Cart<span class="cart-size"></span></li>
      </ul>
  </div>


  <% sandwich.customizations.forEach((customization) => { %>
    <div class="container">
      <div class="spacing">
        <div class="food-label" data-label-id="<%= customization._id %>" data-item-id="<%= sandwich._id %>">
          <h3><%= customization.name %></h3>
        </div>
        <div class="card-wrapper">
          <% customization.options.forEach((option) => { %>
            <div class="card <%= option.default_option ? 'selected' : '' %>" data-card-id="<%= option._id %>" data-item-id="<%= sandwich._id %>">
              <div class="img-class">
                <img src="/img/<%= option.image %>" alt="Card Image">
              </div>
              <div class="card-content">
                <h2 class="card-title"><%= option.name %></h2>
                <p class="card-description">+$<%= option.price %></p>
              </div>
              
              <% if (option.extra_options) { %>
                <div class="buttons">
                  <button>Less</button>
                  <button>Regular</button>
                  <button>Extra (+$<%= option.extra_price %>)</button>
                </div>
              <% } %>
            </div>
          <% }) %>
        </div>
      </div>
    </div>
  <% }) %>


  <!--<div class="container">
    <div class="spacing">
 
     <div class="food-label">
       <h3>Bread</h3>
     </div>
 
    <div class="card-wrapper">
    <div class="card" id="myCard">
 
     <div class="img-class">
       <img src="/img/white_shadow.png" alt="Card Image">
     </div>
   
     <div class="card-content">
       <h2 class="card-title">White Bread</h2>
       <p class="card-description">+$0.50</p>
     </div>

     <div class="buttons" style="display: none;">
      <button>Less</button>
      <button>Regular</button>
      <button >Extra (+$1.00)</button>
    </div>

    </div>
   </div>
  </div>
 </div>  -->


<script>
  
  const containers = document.querySelectorAll('.container');

  containers.forEach((container) => {
    const cards = container.querySelectorAll('.card');

    cards.forEach((card) => {
      const buttons = card.querySelector(".buttons");
      const cardContent = card.querySelector(".card-content");
      const imgClass = card.querySelector(".img-class");

      let isButtonVisible = !!buttons;

      card.addEventListener("click", (event) => {
        if (isButtonVisible) {
          // Toggle the visibility of buttons, imgClass, and hide other card content
          buttons.style.display = buttons.style.display === "none" || buttons.style.display === "" ? "flex" : "none";
          imgClass.style.display = buttons.style.display === "none" ? "block" : "none";
          cardContent.style.display = buttons.style.display === "none" ? "block" : "none";
        }

        // Toggle the "selected" class on the clicked card without affecting other cards
        card.classList.toggle("selected");

        // Add or remove the "selected" class from all cards in the same container except the clicked one
        cards.forEach((containerCard) => {
          if (containerCard !== card) {
            containerCard.classList.remove("selected");
            const containerButtons = containerCard.querySelector(".buttons");
            const containerImgClass = containerCard.querySelector(".img-class");
            const containerCardContent = containerCard.querySelector(".card-content");
            if (containerButtons) {
              containerButtons.style.display = "none";
              containerImgClass.style.display = "block";
              containerCardContent.style.display = "block";
            }
          }
        });
      });

      const options = card.querySelectorAll(".buttons button");

      options.forEach((button) => {
        button.addEventListener("click", (event) => {
          event.stopPropagation();

          // Remove the "active" class from all buttons within the same card
          options.forEach((btn) => btn.classList.remove("active"));

          // Add the "active" class to the clicked button
          button.classList.add("active");

          // Hide buttons, show imgClass, and cardContent
          buttons.style.display = "none";
          imgClass.style.display = "block";
          cardContent.style.display = "block";
        });
      });
    });
  });


</script>




</body>
</html>